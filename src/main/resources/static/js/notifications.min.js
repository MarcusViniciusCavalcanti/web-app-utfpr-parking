class View{constructor(){this._recognizeSection=$("#recognizers")}template(e){throw new Error("Você precisa implementar o método template")}update(e){this._recognizeSection.children("div").remove();const n=document.createElement("div");n.innerHTML=`\n            <div class="col-sm-4 col-md-offset-2">\n              <div class="user-info-sidebar">\n                <a href="#" class="user-img">\n                  <img src="${e.userAvatar}" alt="user-img" class="img-cirlce img-responsive img-thumbnail" />\n                </a>\n                \n                <a href="/users/${e.userId}">\n                  <span class="user-status is-online"></span>\n                </a>\n                \n                <span class="user-title">${e.userName}</span>\n                \n                <hr />\n                \n                <ul class="list-unstyled user-info-list">\n                  <li>\n                    <i class="fa-automobile"></i>${e.carModel}\n                  </li>\n                  ${this.checkType(e.type)}\n                  <li>\n                    <i class="fa-camera-retro"></i>Placa reconhecida ${e.plate}\n                  </li>\n                </ul>\n                \n                <hr />\n                \n                <ul>\n                  <li><span>Acessos: </span>${e.accessNumber}</li>\n                </ul>\n              </div>\n            </div>\n                \n            ${this.template(e)}\n        `,this._recognizeSection.append(n),animationSidebar(),animationNotification(),animationTax()}checkType(e){return"Servidor"===e||"Operador"===e?'\n                  <li>\n                    <i class="fa-briefcase"></i>Servidor\n                  </li>\n            ':"Aluno"===e?'\n                  <li>\n                    <i class="fa-graduation-cap"></i>Aluno\n                  </li>\n            ':"Visitante"===e?'\n                  <li>\n                    <i class="fa-slideshare"></i>Palestrante\n                  </li>\n            ':'\n                  <li>\n                    <i class="fa-question"></i>Desconhecido\n                  </li>\n            '}}class ViewAuthorize extends View{template(e){return`\n            <div class="col-sm-4">\n              <div class="xe-widget xe-progress-counter xe-progress-counter-green" data-count=".num" data-from="0" data-to="${e.tax}" data-duration="2">\n                <div class="xe-background" style="left: -25%">\n                  <i class="linecons-thumbs-up"></i>\n                </div>\n                \n                <div class="xe-upper">\n                  <div class="xe-icon">\n                    <i class="linecons-thumbs-up"></i>\n                  </div>\n                  <div class="xe-label">\n                    <h3 class="text-center">Acesso Autorizado</h3>\n                    <p class="bg-success text-center">Usuário reconhecido</p>\n                    <span>Taxa de acerto</span>\n                    <strong class="num">0</strong>\n                  </div>\n                </div>\n                \n                <div class="xe-progress">\n                  <span class="xe-progress-fill" data-fill-from="0" data-fill-to="${e.tax/100}" data-fill-unit="%" data-fill-property="width" data-fill-duration="2" data-fill-easing="true"></span>\n                </div>\n\n                <div class="xe-lower">\n                  <span>Último acesso</span>\n                    <strong>${e.lastAccess} as ${e.lastHoursAccess}</strong>\n                </div>\n              </div>\n            </div>\n        `}}class ViewUnauthorize{template(e){return`\n            <div class="col-sm-4">\n              <div class="xe-widget xe-progress-counter xe-progress-counter-pink" data-count=".num" data-from="0" data-to="${e.tax}" data-duration="2">\n                <div class="xe-background" style="left: -25%">\n                  <i class="linecons-lock"></i>\n                </div>\n                \n                <div class="xe-upper">\n                  <div class="xe-icon">\n                    <i class="linecons-lock"></i>\n                  </div>\n                  <div class="xe-label">\n                    <h3 class="text-center">Acesso Não Autorizado</h3>\n                    <p class="bg-danger text-center">Usuário reconhecido</p>\n                    <span>Taxa de acerto</span>\n                    <strong class="num">0</strong>\n                  </div>\n                </div>\n                \n                <div class="xe-progress">\n                  <span class="xe-progress-fill" data-fill-from="0" data-fill-to="${e.tax/100}" data-fill-unit="%" data-fill-property="width" data-fill-duration="2" data-fill-easing="true"></span>\n                </div>\n\n                <div class="xe-lower">\n                  <span>Último acesso</span>\n                    <strong>${e.lastAccess} as ${e.lastHoursAccess}</strong>\n                </div>\n              </div>\n            </div>\n        `}}class RecognizeSuccess{set message(e){this._message=e,this._authorize=new ViewAuthorize,this._unauthorize=new ViewUnauthorize}render(){this._message.isAuthorizedAccess?this._authorize.update(this._message):this._unauthorize.update(this._message)}}class RecognizerFail{constructor(){this._recognizeSection=$("#recognizers")}set message(e){this._message=e}render(){this._recognizeSection.children("div").remove();const e=document.createElement("div");e.innerHTML=`\n        <div class="row">\n          <div class="panel panel-default">\n            <div class="panel-body">\n              <div class="col-sm-6 col-md-offset-3">\n                <div class="xe-widget xe-progress-counter xe-progress-counter-yellow" data-count=".num" data-from="0" data-to="${this._message.tax}" data-duration="2">\n\n                  <div class="xe-background" style="left: -15%">\n                    <i class="linecons-eye"></i>\n                </div>\n\n                <div class="xe-upper">\n                  <div class="xe-icon">\n                    <i class="linecons-eye"></i>\n                  </div>\n                  <div class="xe-label">\n                    <h3 class="text-center">Acesso Não Autorizado</h3>\n                    <p class="bg-warning text-center">\n                      Usuário não encontrado na base de dados <br/>\n                      Verique o pedido de acesso\n                    </p>\n                    <span>Taxa de acerto</span>\n                    <strong class="num">0</strong>\n                  </div>\n                </div>\n\n                <div class="xe-progress">\n                  <span class="xe-progress-fill" data-fill-from="0" data-fill-to="${this._message.tax}" data-fill-unit="%" data-fill-property="width" data-fill-duration="2" data-fill-easing="true"></span>\n                </div>\n\n                <div class="xe-lower">\n                  <span>Isso pode indicar que o usuário não foi cadastrado</span>\n                  <strong>Verifique esta ocorrência</strong>\n                </div>\n\n              </div>\n            </div>\n          </div>\n        </div>\n        `,this._recognizeSection.append(e),animationTax(),animNotficationFail()}}function animationSidebar(){const e=document.querySelector(".user-info-sidebar");return TweenMax.from(e,1,{x:100,opacity:0,ease:Back.easeOut.config(1.7),x:-500})}function animationNotification(){const e=document.querySelector(".xe-widget");return TweenMax.from(e,1,{x:-100,opacity:0,ease:Back.easeOut.config(1.7),x:500})}function animNotficationFail(){const e=document.querySelector(".xe-widget");return TweenMax.from(e,1,{scale:0,opacity:0,ease:Back.easeOut.config(1.7),scale:0,opacity:0})}function animationTax(){$("[data-fill-from][data-fill-to]").each(function(e,n){var a=$(n),s=scrollMonitor.create(n);s.fullyEnterViewport(function(){var e={current:null,from:attrDefault(a,"fill-from",0),to:attrDefault(a,"fill-to",100),property:attrDefault(a,"fill-property","width"),unit:attrDefault(a,"fill-unit","%")},n={current:e.to,onUpdate:function(){a.css(e.property,e.current+e.unit)},delay:attrDefault(a,"delay",0)},t=attrDefault(a,"fill-easing",!0),i=attrDefault(a,"fill-duration",2.5);t&&(n.ease=Sine.easeOut),e.current=e.from,TweenMax.to(e,i,n),s.destroy()})}),$("[data-from][data-to]").each(function(e,n){var a=$(n),s=scrollMonitor.create(n);s.fullyEnterViewport(function(){var e={useEasing:attrDefault(a,"easing",!0),useGrouping:attrDefault(a,"grouping",!0),separator:attrDefault(a,"separator",","),decimal:attrDefault(a,"decimal","."),prefix:attrDefault(a,"prefix",""),suffix:attrDefault(a,"suffix","")},n="this"==attrDefault(a,"count","this")?a:a.find(a.data("count")),t=attrDefault(a,"from",0),i=attrDefault(a,"to",100),o=attrDefault(a,"duration",2.5),r=attrDefault(a,"delay",0),c=new String(i).match(/\.([0-9]+)/)?new String(i).match(/\.([0-9]+)$/)[1].length:0,l=new countUp(n.get(0),t,i,c,o,e);setTimeout(function(){l.start()},1e3*r),s.destroy()})})}let stomp=null;const recognizeSuccess=new RecognizeSuccess,recognizeFail=new RecognizerFail;function connect(){const e={"${_csrf.headerName}":"${_csrf.token}"},n=new SockJS("/recognize");(stomp=Stomp.over(n)).connect(e,function(e){stomp.subscribe("/app/recognize",function(e){console.log("INITIAL: "+e);const n=$.parseJSON(e.body);$.each(n,function(e,n){update(n)})}),stomp.subscribe("/topic/recognize",function(e){console.log("New Message: "+e),update($.parseJSON(e.body))})})}function update(e){if(e){let n=null;e.identified?(recognizeSuccess.message=e,n=recognizeSuccess):(recognizeFail.message=e,n=recognizeFail),n.render()}}$(document).ready(function(){connect()});